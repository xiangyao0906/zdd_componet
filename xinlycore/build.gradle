ext.alwaysLib = true //虽然apply了cc-settings-2.gradle，但一直作为library编译，否则别的组件依赖此module时会报错
apply from: rootProject.file('cc-settings-demo.gradle')
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {

        }

        beta {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    //net
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    api rootProject.ext.dependencies["logger-interceptor"]
    //RxKotlin and RxAndroid
    api rootProject.ext.dependencies["rxkotlin"]
    api rootProject.ext.dependencies["rxandroid"]
    //RxLifecycle
    api rootProject.ext.dependencies["rxlifecycle-kotlin"]
    api rootProject.ext.dependencies["rxlifecycle-component"]

    kapt rootProject.ext.androidx["lifecycle-compiler"]
    api rootProject.ext.kotlin_stdlib_jdk7
    api rootProject.ext.androidx["appcompat"]
    api rootProject.ext.androidx["core-ktx"]
    api rootProject.ext.androidx["constraintlayout"]
    api rootProject.ext.androidx["recycyvlerView"]
    api rootProject.ext.androidx["material"]
    // Toast{@link https://github.com/Dovar66/DToast}
    implementation rootProject.ext.dependencies["DToast"]
    // rxBinding
    api rootProject.ext.dependencies["rxbinding-kotlin"]
    // glide
    api rootProject.ext.dependencies["glide"]

    kapt rootProject.ext.dependencies["glide-compiler"]

    api rootProject.ext.dependencies["smartrefresh"]

    // rxPermissions
    api rootProject.ext.dependencies["rxpermissions"]

    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'

    api 'org.greenrobot:eventbus:3.2.0'

    api 'com.google.android:flexbox:2.0.1'

    api 'top.zibin:Luban:1.1.8'
    //4.4以上沉浸式实现
    api 'com.gyf.immersionbar:immersionbar:3.0.0'
    // fragment快速实现（可选）
    api 'com.gyf.immersionbar:immersionbar-components:3.0.0'

    implementation 'com.google.android.material:material:1.4.0'

    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.23'

    api 'jp.wasabeef:glide-transformations:4.3.0'//glide图片变换效果
    // If you want to use the GPU Filters
    api 'jp.co.cyberagent.android:gpuimage:2.1.0'

    api 'com.github.bumptech.glide:okhttp3-integration:4.12.0@aar'

    api 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    api 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'

    api 'com.github.loperSeven:DateTimePicker:0.6.2'
}